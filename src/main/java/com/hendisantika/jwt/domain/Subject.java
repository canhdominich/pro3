package com.hendisantika.jwt.domain;
// Generated Dec 18, 2018 10:00:44 PM by Hibernate Tools 5.2.8.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonView;
import com.hendisantika.jwt.jsonview.MarkJsonView;
import com.hendisantika.jwt.jsonview.SubjectJsonView;

/**
 * Subject generated by hbm2java
 */
@Entity
@Table(name = "subject", catalog = "mydb1")
public class Subject implements java.io.Serializable {

	@JsonView(SubjectJsonView.Public.class)
	private Integer subjectid;
	@JsonView({ SubjectJsonView.Public.class, MarkJsonView.Public.class })
	private String name;
	@JsonView(SubjectJsonView.Public.class)
	private String grade;
	private Set<ClassroomHasTeacher> classroomHasTeachers = new HashSet<ClassroomHasTeacher>(0);
	private Set<Test> tests = new HashSet<Test>(0);
	private Set<Teacher> teachers = new HashSet<Teacher>(0);

	public Subject() {
	}

	public Subject(String name, String grade, Set<ClassroomHasTeacher> classroomHasTeachers, Set<Test> tests,
			Set<Teacher> teachers) {
		this.name = name;
		this.grade = grade;
		this.classroomHasTeachers = classroomHasTeachers;
		this.tests = tests;
		this.teachers = teachers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "subjectid", unique = true, nullable = false)
	public Integer getSubjectid() {
		return this.subjectid;
	}

	public void setSubjectid(Integer subjectid) {
		this.subjectid = subjectid;
	}

	@Column(name = "name", length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "grade", length = 45)
	public String getGrade() {
		return this.grade;
	}

	public void setGrade(String grade) {
		this.grade = grade;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subject")
	public Set<ClassroomHasTeacher> getClassroomHasTeachers() {
		return this.classroomHasTeachers;
	}

	public void setClassroomHasTeachers(Set<ClassroomHasTeacher> classroomHasTeachers) {
		this.classroomHasTeachers = classroomHasTeachers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subject")
	public Set<Test> getTests() {
		return this.tests;
	}

	public void setTests(Set<Test> tests) {
		this.tests = tests;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "subjects")
	public Set<Teacher> getTeachers() {
		return this.teachers;
	}

	public void setTeachers(Set<Teacher> teachers) {
		this.teachers = teachers;
	}

}
